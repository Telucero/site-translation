name: Translate Documentation

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

env:
  TARGET_LANGUAGES: es fr
  DEFAULT_LANGUAGE: en
  PYTHON_VERSION: "3.11"

jobs:
  translate:
    runs-on: ubuntu-latest
    if: github.repository_owner != 'dependabot[bot]'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Validate inputs
        run: |
          if [ -z "${{ secrets.N8N_WEBHOOK_URL_TR }}" ]; then
            echo "Secret N8N_WEBHOOK_URL_TR is required." >&2
            exit 1
          fi

      - name: Collect English documentation changes
        id: changes
        run: |
          BASE="${{ github.event.before }}"
          HEAD="${{ github.sha }}"
          if [ "$BASE" = "0000000000000000000000000000000000000000" ] || [ -z "$BASE" ]; then
            BASE=$(git rev-list --max-parents=0 "$HEAD")
          fi

          git diff --name-only "$BASE" "$HEAD" -- ':(glob)docs/${{ env.DEFAULT_LANGUAGE }}/**/*.md' > english_changes.txt || true
          # Remove empty lines to avoid passing blank arguments
          sed -i '/^$/d' english_changes.txt || true
          CHANGED_COUNT=$(wc -l < english_changes.txt || echo 0)

          echo "count=$CHANGED_COUNT" >> "$GITHUB_OUTPUT"
          echo "files<<EOF" >> "$GITHUB_OUTPUT"
          cat english_changes.txt >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Request translations via n8n
        if: steps.changes.outputs.count != '0'
        env:
          N8N_WEBHOOK_URL_TR: ${{ secrets.N8N_WEBHOOK_URL_TR }}
          DEFAULT_LANGUAGE: ${{ env.DEFAULT_LANGUAGE }}
          TARGET_LANGUAGES: ${{ env.TARGET_LANGUAGES }}
        run: |
          if [ -z "$N8N_WEBHOOK_URL_TR" ]; then
            echo "Missing N8N_WEBHOOK_URL_TR secret" >&2
            exit 1
          fi
          mapfile -t FILE_LIST < english_changes.txt
          python scripts/request_translation.py "${FILE_LIST[@]}" \
            --webhook-url "$N8N_WEBHOOK_URL_TR" \
            --languages $TARGET_LANGUAGES \
            --default-language "$DEFAULT_LANGUAGE" \
            --branch "${{ github.ref }}" \
            --commit "${{ github.sha }}"

      - name: Detect missing localized docs
        env:
          DEFAULT_LANGUAGE: ${{ env.DEFAULT_LANGUAGE }}
          TARGET_LANGUAGES: ${{ env.TARGET_LANGUAGES }}
        run: |
          python - <<'PY'
import os
from pathlib import Path

default_lang = os.environ["DEFAULT_LANGUAGE"]
target_langs = [lang.strip() for lang in os.environ["TARGET_LANGUAGES"].split() if lang.strip()]
repo = Path(".").resolve()
english_root = repo / "docs" / default_lang
if not english_root.exists():
    raise SystemExit(f"Expected directory {english_root} to exist.")

missing = set()
for src in english_root.rglob("*.md"):
    rel = src.relative_to(english_root)
    rel_en = Path("docs") / default_lang / rel
    for lang in target_langs:
        localized = repo / "docs" / lang / rel
        if not localized.exists():
            missing.add(str(rel_en))
            break

missing_file = Path("missing_docs.txt")
if missing:
    missing_file.write_text("\n".join(sorted(missing)), encoding="utf-8")
    print(f"Missing localized docs detected: {len(missing)}")
else:
    missing_file.write_text("", encoding="utf-8")
    print("All localized docs present.")
PY

      - name: Backfill missing localized docs
        env:
          N8N_WEBHOOK_URL_TR: ${{ secrets.N8N_WEBHOOK_URL_TR }}
          DEFAULT_LANGUAGE: ${{ env.DEFAULT_LANGUAGE }}
          TARGET_LANGUAGES: ${{ env.TARGET_LANGUAGES }}
        run: |
          if [ ! -s missing_docs.txt ]; then
            echo "No missing docs to translate."
            exit 0
          fi
          if [ -z "$N8N_WEBHOOK_URL_TR" ]; then
            echo "Missing N8N_WEBHOOK_URL_TR secret" >&2
            exit 1
          fi
          mapfile -t FILE_LIST < missing_docs.txt
          echo "Requesting translations for missing docs:"
          printf ' - %s\n' "${FILE_LIST[@]}"
          python scripts/request_translation.py "${FILE_LIST[@]}" \
            --webhook-url "$N8N_WEBHOOK_URL_TR" \
            --languages $TARGET_LANGUAGES \
            --default-language "$DEFAULT_LANGUAGE" \
            --branch "${{ github.ref }}" \
            --commit "${{ github.sha }}"

      - name: Cleanup temporary files
        if: ${{ always() }}
        run: rm -f english_changes.txt missing_docs.txt

      - name: Report localized diff
        if: steps.changes.outputs.count != '0'
        run: |
          if git diff --quiet --exit-code; then
            echo "::warning ::No localized files were generated by n8n response."
          else
            git status -sb
          fi

      - name: Build MkDocs site
        run: mkdocs build

      - name: Commit localized updates
        if: steps.changes.outputs.count != '0'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update localized docs"
          branch: ${{ github.ref_name }}
